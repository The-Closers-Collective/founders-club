{"version":3,"sources":["app.js"],"names":[],"mappingsfile":"scripts.js","sourcesContent":["window.addEventListener('DOMContentLoaded', event => {\n\n    // Navbar shrink function\n    var navbarShrink = function () {\n        const navbarCollapsible = document.body.querySelector('#mainNav');\n        if (!navbarCollapsible) {\n            return;\n        }\n        if (window.scrollY === 0) {\n            navbarCollapsible.classList.remove('navbar-shrink')\n        } else {\n            navbarCollapsible.classList.add('navbar-shrink')\n        }\n\n    };\n\n    // Shrink the navbar \n    navbarShrink();\n\n    // Shrink the navbar when page is scrolled\n    document.addEventListener('scroll', navbarShrink);\n\n    // Activate Bootstrap scrollspy on the main nav element\n    const mainNav = document.body.querySelector('#mainNav');\n    if (mainNav) {\n        new bootstrap.ScrollSpy(document.body, {\n            target: '#mainNav',\n            rootMargin: '0px 0px -40%',\n        });\n    };\n\n    // Collapse responsive navbar when toggler is visible\n    const navbarToggler = document.body.querySelector('.navbar-toggler');\n    const responsiveNavItems = [].slice.call(\n        document.querySelectorAll('#navbarResponsive .nav-link')\n    );\n    responsiveNavItems.map(function (responsiveNavItem) {\n        responsiveNavItem.addEventListener('click', () => {\n            if (window.getComputedStyle(navbarToggler).display !== 'none') {\n                navbarToggler.click();\n            }\n        });\n    });\n\n});\n\n// document.getElementById(\"contactForm\").addEventListener(\"submit\", async function(event) {\n//   event.preventDefault();\n  \n//   const nameInput = document.getElementById(\"fullName\");\n//   const emailInput = document.getElementById(\"emailAddress\");\n//   const submitButton = document.getElementById(\"submitButton\");\n//   const successMessage = document.getElementById(\"submitSuccessMessage\");\n//   const errorMessage = document.getElementById(\"submitErrorMessage\");\n\n//   // Validate email\n//   const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n//   if (!emailRegex.test(emailInput.value)) {\n//     emailInput.setCustomValidity(\"Email is not valid.\");\n//     return;\n//   } else {\n//     emailInput.setCustomValidity(\"\");\n//   }\n\n//   // Prepare form data\n//   const formData = new FormData(event.target);\n\n//   // Submit the form via POST\n//   try {\n//     submitButton.disabled = true;\n//     const response = await fetch(\"https://icloseevent.activehosted.com/proc.php\", {\n//       method: \"POST\",\n//       body: formData,\n//     });\n\n//     if (response.ok) {\n//       // Show success message\n//       successMessage.classList.remove(\"d-none\");\n//       errorMessage.classList.add(\"d-none\");\n//     } else {\n//       // Show error message\n//       successMessage.classList.add(\"d-none\");\n//       errorMessage.classList.remove(\"d-none\");\n//     }\n//   } catch (error) {\n//     // Show error message\n//     successMessage.classList.add(\"d-none\");\n//     errorMessage.classList.remove(\"d-none\");\n//   } finally {\n//     submitButton.disabled = false;\n//   }\n// });\n\n\nwindow.cfields = [];\n window._show_thank_you = function(id, message, trackcmp_url, email) {\n     var form = document.getElementById('_form_' + id + '_'),\n         thank_you = form.querySelector('._form-thank-you');\n     form.querySelector('._form-content').style.display = 'none';\n     thank_you.innerHTML = message;\n     thank_you.style.display = 'block';\n     const vgoAlias = typeof visitorGlobalObjectAlias === 'undefined' ? 'vgo' : visitorGlobalObjectAlias;\n     var visitorObject = window[vgoAlias];\n     if (email && typeof visitorObject !== 'undefined') {\n         visitorObject('setEmail', email);\n         visitorObject('update');\n     } else if (typeof(trackcmp_url) != 'undefined' && trackcmp_url) {\n         // Site tracking URL to use after inline form submission.\n         _load_script(trackcmp_url);\n     }\n     if (typeof window._form_callback !== 'undefined') window._form_callback(id);\n };\n window._show_error = function(id, message, html) {\n     var form = document.getElementById('_form_' + id + '_'),\n         err = document.createElement('div'),\n         button = form.querySelector('button'),\n         old_error = form.querySelector('._form_error');\n     if (old_error) old_error.parentNode.removeChild(old_error);\n     err.innerHTML = message;\n     err.className = '_error-inner _form_error _no_arrow';\n     var wrapper = document.createElement('div');\n     wrapper.className = '_form-inner';\n     wrapper.appendChild(err);\n     button.parentNode.insertBefore(wrapper, button);\n     document.querySelector('[id^=\"_form\"][id$=\"_submit\"]').disabled = false;\n     if (html) {\n         var div = document.createElement('div');\n         div.className = '_error-html';\n         div.innerHTML = html;\n         err.appendChild(div);\n     }\n };\n window._load_script = function(url, callback, isSubmit) {\n     var head = document.querySelector('head'),\n         script = document.createElement('script'),\n         r = false;\n     script.type = 'text/javascript';\n     script.charset = 'utf-8';\n     script.src = url;\n     if (callback) {\n         script.onload = script.onreadystatechange = function() {\n             if (!r && (!this.readyState || this.readyState == 'complete')) {\n                 r = true;\n                 callback();\n             }\n         };\n     }\n     script.onerror = function() {\n         if (isSubmit) {\n             if (script.src.length > 10000) {\n                 _show_error(\"7\", \"Sorry, your submission failed. Please shorten your responses and try again.\");\n             } else {\n                 _show_error(\"7\", \"Sorry, your submission failed. Please try again.\");\n             }\n         }\n     }\n     head.appendChild(script);\n };\n (function() {\n     if (window.location.search.search(\"excludeform\") !== -1) return false;\n     var getCookie = function(name) {\n         var match = document.cookie.match(new RegExp('(^|; )' + name + '=([^;]+)'));\n         return match ? match[2] : null;\n     }\n     var setCookie = function(name, value) {\n         var now = new Date();\n         var time = now.getTime();\n         var expireTime = time + 1000 * 60 * 60 * 24 * 365;\n         now.setTime(expireTime);\n         document.cookie = name + '=' + value + '; expires=' + now + ';path=/; Secure; SameSite=Lax;'; // cannot be HttpOnly\n     }\n     var addEvent = function(element, event, func) {\n         if (element.addEventListener) {\n             element.addEventListener(event, func);\n         } else {\n             var oldFunc = element['on' + event];\n             element['on' + event] = function() {\n                 oldFunc.apply(this, arguments);\n                 func.apply(this, arguments);\n             };\n         }\n     }\n     var _removed = false;\n     var form_to_submit = document.getElementById('_form_7_');\n     var allInputs = form_to_submit.querySelectorAll('input, select, textarea'),\n         tooltips = [],\n         submitted = false;\n     var getUrlParam = function(name) {\n         var params = new URLSearchParams(window.location.search);\n         return params.get(name) || false;\n     };\n     for (var i = 0; i < allInputs.length; i++) {\n         var regexStr = \"field\\\\[(\\\\d+)\\\\]\";\n         var results = new RegExp(regexStr).exec(allInputs[i].name);\n         if (results != undefined) {\n             allInputs[i].dataset.name = window.cfields[results[1]];\n         } else {\n             allInputs[i].dataset.name = allInputs[i].name;\n         }\n         var fieldVal = getUrlParam(allInputs[i].dataset.name);\n         if (fieldVal) {\n             if (allInputs[i].dataset.autofill === \"false\") {\n                 continue;\n             }\n             if (allInputs[i].type == \"radio\" || allInputs[i].type == \"checkbox\") {\n                 if (allInputs[i].value == fieldVal) {\n                     allInputs[i].checked = true;\n                 }\n             } else {\n                 allInputs[i].value = fieldVal;\n             }\n         }\n     }\n     var remove_tooltips = function() {\n         for (var i = 0; i < tooltips.length; i++) {\n             tooltips[i].tip.parentNode.removeChild(tooltips[i].tip);\n         }\n         tooltips = [];\n     };\n     var remove_tooltip = function(elem) {\n         for (var i = 0; i < tooltips.length; i++) {\n             if (tooltips[i].elem === elem) {\n                 tooltips[i].tip.parentNode.removeChild(tooltips[i].tip);\n                 tooltips.splice(i, 1);\n                 return;\n             }\n         }\n     };\n     var create_tooltip = function(elem, text) {\n         var tooltip = document.createElement('div'),\n             arrow = document.createElement('div'),\n             inner = document.createElement('div'),\n             new_tooltip = {};\n         if (elem.type != 'radio' && elem.type != 'checkbox') {\n             tooltip.className = '_error';\n             arrow.className = '_error-arrow';\n             inner.className = '_error-inner';\n             inner.innerHTML = text;\n             tooltip.appendChild(arrow);\n             tooltip.appendChild(inner);\n             elem.parentNode.appendChild(tooltip);\n         } else {\n             tooltip.className = '_error-inner _no_arrow';\n             tooltip.innerHTML = text;\n             elem.parentNode.insertBefore(tooltip, elem);\n             new_tooltip.no_arrow = true;\n         }\n         new_tooltip.tip = tooltip;\n         new_tooltip.elem = elem;\n         tooltips.push(new_tooltip);\n         return new_tooltip;\n     };\n     var resize_tooltip = function(tooltip) {\n         var rect = tooltip.elem.getBoundingClientRect();\n         var doc = document.documentElement,\n             scrollPosition = rect.top - ((window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0));\n         if (scrollPosition < 40) {\n             tooltip.tip.className = tooltip.tip.className.replace(/ ?(_above|_below) ?/g, '') + ' _below';\n         } else {\n             tooltip.tip.className = tooltip.tip.className.replace(/ ?(_above|_below) ?/g, '') + ' _above';\n         }\n     };\n     var resize_tooltips = function() {\n         if (_removed) return;\n         for (var i = 0; i < tooltips.length; i++) {\n             if (!tooltips[i].no_arrow) resize_tooltip(tooltips[i]);\n         }\n     };\n     var validate_field = function(elem, remove) {\n         var tooltip = null,\n             value = elem.value,\n             no_error = true;\n         remove ? remove_tooltip(elem) : false;\n         if (elem.type != 'checkbox') elem.className = elem.className.replace(/ ?_has_error ?/g, '');\n         if (elem.getAttribute('required') !== null) {\n             if (elem.type == 'radio' || (elem.type == 'checkbox' && /any/.test(elem.className))) {\n                 var elems = form_to_submit.elements[elem.name];\n                 if (!(elems instanceof NodeList || elems instanceof HTMLCollection) || elems.length <= 1) {\n                     no_error = elem.checked;\n                 } else {\n                     no_error = false;\n                     for (var i = 0; i < elems.length; i++) {\n                         if (elems[i].checked) no_error = true;\n                     }\n                 }\n                 if (!no_error) {\n                     tooltip = create_tooltip(elem, \"Please select an option.\");\n                 }\n             } else if (elem.type == 'checkbox') {\n                 var elems = form_to_submit.elements[elem.name],\n                     found = false,\n                     err = [];\n                 no_error = true;\n                 for (var i = 0; i < elems.length; i++) {\n                     if (elems[i].getAttribute('required') === null) continue;\n                     if (!found && elems[i] !== elem) return true;\n                     found = true;\n                     elems[i].className = elems[i].className.replace(/ ?_has_error ?/g, '');\n                     if (!elems[i].checked) {\n                         no_error = false;\n                         elems[i].className = elems[i].className + ' _has_error';\n                         err.push(\"Checking %s is required\".replace(\"%s\", elems[i].value));\n                     }\n                 }\n                 if (!no_error) {\n                     tooltip = create_tooltip(elem, err.join('<br/>'));\n                 }\n             } else if (elem.tagName == 'SELECT') {\n                 var selected = true;\n                 if (elem.multiple) {\n                     selected = false;\n                     for (var i = 0; i < elem.options.length; i++) {\n                         if (elem.options[i].selected) {\n                             selected = true;\n                             break;\n                         }\n                     }\n                 } else {\n                     for (var i = 0; i < elem.options.length; i++) {\n                         if (elem.options[i].selected && (!elem.options[i].value || (elem.options[i].value.match(/\\n/g)))) {\n                             selected = false;\n                         }\n                     }\n                 }\n                 if (!selected) {\n                     elem.className = elem.className + ' _has_error';\n                     no_error = false;\n                     tooltip = create_tooltip(elem, \"Please select an option.\");\n                 }\n             } else if (value === undefined || value === null || value === '') {\n                 elem.className = elem.className + ' _has_error';\n                 no_error = false;\n                 tooltip = create_tooltip(elem, \"This field is required.\");\n             }\n         }\n         if (no_error && (elem.id == 'field[]' || elem.id == 'ca[11][v]')) {\n             if (elem.className.includes('phone-input-error')) {\n                 elem.className = elem.className + ' _has_error';\n                 no_error = false;\n             }\n         }\n         if (no_error && elem.name == 'email') {\n             if (!value.match(/^[\\+_a-z0-9-'&=]+(\\.[\\+_a-z0-9-']+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,})$/i)) {\n                 elem.className = elem.className + ' _has_error';\n                 no_error = false;\n                 tooltip = create_tooltip(elem, \"Enter a valid email address.\");\n             }\n         }\n         if (no_error && /date_field/.test(elem.className)) {\n             if (!value.match(/^\\d\\d\\d\\d-\\d\\d-\\d\\d$/)) {\n                 elem.className = elem.className + ' _has_error';\n                 no_error = false;\n                 tooltip = create_tooltip(elem, \"Enter a valid date.\");\n             }\n         }\n         tooltip ? resize_tooltip(tooltip) : false;\n         return no_error;\n     };\n     var needs_validate = function(el) {\n         if (el.getAttribute('required') !== null) {\n             return true\n         }\n         if (el.name === 'email' && el.value !== \"\") {\n             return true\n         }\n         if ((el.id == 'field[]' || el.id == 'ca[11][v]') && el.className.includes('phone-input-error')) {\n             return true\n         }\n         return false\n     };\n     var validate_form = function(e) {\n         var err = form_to_submit.querySelector('._form_error'),\n             no_error = true;\n         if (!submitted) {\n             submitted = true;\n             for (var i = 0, len = allInputs.length; i < len; i++) {\n                 var input = allInputs[i];\n                 if (needs_validate(input)) {\n                     if (input.type == 'tel') {\n                         addEvent(input, 'blur', function() {\n                             this.value = this.value.trim();\n                             validate_field(this, true);\n                         });\n                     }\n                     if (input.type == 'text' || input.type == 'number' || input.type == 'time') {\n                         addEvent(input, 'blur', function() {\n                             this.value = this.value.trim();\n                             validate_field(this, true);\n                         });\n                         addEvent(input, 'input', function() {\n                             validate_field(this, true);\n                         });\n                     } else if (input.type == 'radio' || input.type == 'checkbox') {\n                         (function(el) {\n                             var radios = form_to_submit.elements[el.name];\n                             for (var i = 0; i < radios.length; i++) {\n                                 addEvent(radios[i], 'click', function() {\n                                     validate_field(el, true);\n                                 });\n                             }\n                         })(input);\n                     } else if (input.tagName == 'SELECT') {\n                         addEvent(input, 'change', function() {\n                             validate_field(this, true);\n                         });\n                     } else if (input.type == 'textarea') {\n                         addEvent(input, 'input', function() {\n                             validate_field(this, true);\n                         });\n                     }\n                 }\n             }\n         }\n         remove_tooltips();\n         for (var i = 0, len = allInputs.length; i < len; i++) {\n             var elem = allInputs[i];\n             if (needs_validate(elem)) {\n                 if (elem.tagName.toLowerCase() !== \"select\") {\n                     elem.value = elem.value.trim();\n                 }\n                 validate_field(elem) ? true : no_error = false;\n             }\n         }\n         if (!no_error && e) {\n             e.preventDefault();\n         }\n         resize_tooltips();\n         return no_error;\n     };\n     addEvent(window, 'resize', resize_tooltips);\n     addEvent(window, 'scroll', resize_tooltips);\n     var hidePhoneInputError = function(inputId) {\n         var errorMessage = document.getElementById(\"error-msg-\" + inputId);\n         var input = document.getElementById(inputId);\n         errorMessage.classList.remove(\"phone-error\");\n         errorMessage.classList.add(\"phone-error-hidden\");\n         input.classList.remove(\"phone-input-error\");\n     };\n     var initializePhoneInput = function(input, defaultCountry) {\n         return window.intlTelInput(input, {\n             utilsScript: \"https://unpkg.com/intl-tel-input@17.0.18/build/js/utils.js\",\n             autoHideDialCode: false,\n             separateDialCode: true,\n             initialCountry: defaultCountry,\n             preferredCountries: []\n         });\n     }\n     var setPhoneInputEventListeners = function(inputId, input, iti) {\n         input.addEventListener('blur', function() {\n             var errorMessage = document.getElementById(\"error-msg-\" + inputId);\n             if (input.value.trim()) {\n                 if (iti.isValidNumber()) {\n                     iti.setNumber(iti.getNumber());\n                     if (errorMessage.classList.contains(\"phone-error\")) {\n                         hidePhoneInputError(inputId);\n                     }\n                 } else {\n                     showPhoneInputError(inputId)\n                 }\n             } else {\n                 if (errorMessage.classList.contains(\"phone-error\")) {\n                     hidePhoneInputError(inputId);\n                 }\n             }\n         });\n         input.addEventListener(\"countrychange\", function() {\n             iti.setNumber('');\n         });\n         input.addEventListener(\"keydown\", function(e) {\n             var charCode = (e.which) ? e.which : e.keyCode;\n             if (charCode > 31 && (charCode < 48 || charCode > 57) && charCode !== 8) {\n                 e.preventDefault();\n             }\n         });\n     };\n     var showPhoneInputError = function(inputId) {\n         var errorMessage = document.getElementById(\"error-msg-\" + inputId);\n         var input = document.getElementById(inputId);\n         errorMessage.classList.add(\"phone-error\");\n         errorMessage.classList.remove(\"phone-error-hidden\");\n         input.classList.add(\"phone-input-error\");\n     };\n     var _form_serialize = function(form) {\n         if (!form || form.nodeName !== \"FORM\") {\n             return\n         }\n         var i, j, q = [];\n         for (i = 0; i < form.elements.length; i++) {\n             if (form.elements[i].name === \"\") {\n                 continue\n             }\n             switch (form.elements[i].nodeName) {\n                 case \"INPUT\":\n                     switch (form.elements[i].type) {\n                         case \"tel\":\n                             q.push(form.elements[i].name + \"=\" + encodeURIComponent(form.elements[i].previousSibling.querySelector('div.iti__selected-dial-code').innerText) + encodeURIComponent(\" \") + encodeURIComponent(form.elements[i].value));\n                             break;\n                         case \"text\":\n                         case \"number\":\n                         case \"date\":\n                         case \"time\":\n                         case \"hidden\":\n                         case \"password\":\n                         case \"button\":\n                         case \"reset\":\n                         case \"submit\":\n                             q.push(form.elements[i].name + \"=\" + encodeURIComponent(form.elements[i].value));\n                             break;\n                         case \"checkbox\":\n                         case \"radio\":\n                             if (form.elements[i].checked) {\n                                 q.push(form.elements[i].name + \"=\" + encodeURIComponent(form.elements[i].value))\n                             }\n                             break;\n                         case \"file\":\n                             break\n                     }\n                     break;\n                 case \"TEXTAREA\":\n                     q.push(form.elements[i].name + \"=\" + encodeURIComponent(form.elements[i].value));\n                     break;\n                 case \"SELECT\":\n                     switch (form.elements[i].type) {\n                         case \"select-one\":\n                             q.push(form.elements[i].name + \"=\" + encodeURIComponent(form.elements[i].value));\n                             break;\n                         case \"select-multiple\":\n                             for (j = 0; j < form.elements[i].options.length; j++) {\n                                 if (form.elements[i].options[j].selected) {\n                                     q.push(form.elements[i].name + \"=\" + encodeURIComponent(form.elements[i].options[j].value))\n                                 }\n                             }\n                             break\n                     }\n                     break;\n                 case \"BUTTON\":\n                     switch (form.elements[i].type) {\n                         case \"reset\":\n                         case \"submit\":\n                         case \"button\":\n                             q.push(form.elements[i].name + \"=\" + encodeURIComponent(form.elements[i].value));\n                             break\n                     }\n                     break\n             }\n         }\n         return q.join(\"&\")\n     };\n     var form_submit = function(e) {\n         e.preventDefault();\n         if (validate_form()) {\n             // use this trick to get the submit button & disable it using plain javascript\n             document.querySelector('#_form_7_submit').disabled = true;\n             var serialized = _form_serialize(document.getElementById('_form_7_')).replace(/%0A/g, '\\\\n');\n             var err = form_to_submit.querySelector('._form_error');\n             err ? err.parentNode.removeChild(err) : false;\n             _load_script('https://icloseevent.activehosted.com/proc.php?' + serialized + '&jsonp=true', null, true);\n         }\n         return false;\n     };\n     addEvent(form_to_submit, 'submit', form_submit);\n })();"]}